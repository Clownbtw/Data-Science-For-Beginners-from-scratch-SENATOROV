"""Контрибьютинг в Open Source."""

# 1.1) Что такое GitHub?
#
# Платформа, где хранятся проекты разных людей, использует систему Git,
# что позволяет разработчикам совместно работать над кодом, изменять его,
# отправлять ифнормацию об ошибках и т.п.
#
# 1.2) Как GitHub связан с Git?
#
# Git следит за изменением ваших файлов(если отправлять туда изменения),
# и также Git отправляет изменения на Github, где работают разработчики.
#
# 1.3) Чем отличается fork репозитория от его клонирования (clone)?
#
# Клонирование - это копирование репозитория на наш ПК и
# мы можем с ним работать локально, без отправки в изначальный репозиторий изменений.
# Fork - это уже создание полноценной копии репозитория, с которой мы работаем не локально,
# и следовательно можем отправлять в изначальный репозиторий фиксы/свои дополнения,
# предложения по коду и т.д.
#
# 1.4) Зачем нужны и как работают pull requests?
#
# PR - место, для предложений изменения кода в репозитории.
# Нужно, чтобы мы могли провести код-ревью, предложить какие-то свои идеи,
# произвести слияние кода.
#
# 1.5) GitHub использует ваш почтовый адрес для привязки ваших Git коммитов к вашей учётной записи?
#
# Да
#
# 1.6) Какая команда генерирует SSH ключ для Доступа по SSH к репозиторию (Рисунок 83)
#
# ssh-keygen
#
# 2.1) Сделал
# https://github.com/Clownbtw/Data-Science-For-Beginners-from-scratch-SENATOROV
# 2.2)
# https://github.com/Clownbtw/Data-Science-For-Beginners-from-scratch-SENATOROV/tree/dev
# 2.7)
# https://github.com/SENATOROVAI/Data-Science-For-Beginners-from-scratch-SENATOROV/pulls?q=is%3Apr+is%3Aclosed
# 2.8) Заходим в историю коммитов репозитория, выбираем нужный нам коммит и нажмаем на Browse files
# https://github.com/SENATOROVAI/Data-Science-For-Beginners-from-scratch-SENATOROV/tree/bb4c7d4d0d7e97aa48dd1c5e3c814223f404439d
# 2.9) Нужно для работы в разных ветках, чтобы не было конфликтов в коде и т.п.
# Создаем новую ветку от предыдущего PR, делаем изменения, нажимаем Compare & Pull request
#
# 3) Напишите 8 пунктов, которые нужно сделать, чтобы внести вклад в чужой проект.
#     1.Делаем форк, нужного репозитория
#     2.Клонируем форк на наш ПК
#     3.Заводим ишьюс, где прописываем, изменения, что меняем
#     4.Открывает в IDE репозиторий
#     5.Меняем как мы хотим сделать
#     6.Коммитим, ссылаясь на наш ишьюс
#     7.Отправляем PR, в проект, там описываем, что сделали, ссылаясь на ишьюс
#     8.Запрашиваем ревью кода
#
# 3.1) Какие практики принято соблюдать при создании Pull Request чтобы закрыть автоматический issues?
#     Нужно указывать closes и #номер_ишьюса
# Какие практики принято соблюдать при создании commit чтобы закрыть автоматический issues?
#     Нужно указать fix: #номер_ишьюса или также но с closes
#
# 3.2) Как отклонить/закрыть пул реквест? (предоставьте скриншот где это в гитхабе)
#     ![image.png](attachment:image.png)
# 3.3)Перед отправкой пул реквеста нужно ли создавать ишьюс?
#     Мы создаем ишьюс в большинстве случаев, когда хотим обсудить тему и т.п,
#     его не создают крайне редко
# 3.4)В какой вкладке можно посмотреть список изменений который был в пул реквесте?
#     Нужно нажать на кнопку Files Changed
# 3.5)В какой вкладке находится страница обсуждений пул реквеста?
#     Во вкладке 'Conversation'
#
# 4) Можно ли открыть пул реквест, если вы ничего не вносили в FORK?
#
# Нет, нельзя
#
# 4.1)  Что нужно сделать чтобы открыть пул реквест?
#
# Нажать на кнопку "Compare & pull request" между двумя ветками
#
# 4.2) Что нужно сделать Если ваш Форк устарел?
#
# Нужно зайти на свой форк, нажать на "Sync fork" -> "Update"
#
# 4.3) Что нужно сделать если в пул реквесте имеются конфликты слияния
#
# Открываем PR -> 'Resolve Conflicts' -> открывается редактор,
# вносим изменения(редактируем), нажимаем 'Mark as resolved' -> 'Commit merge'
#
# 5) Что нужно сделать Для добавления отрывка кода в комментарии к ишьюсу?
#
# Если нужен однострочный код  - `Текст`
# Если нужен многострочный код - ```Текст```
#
# 5.1) На какую клавишу нажать клавишу,
# чтобы выделенный текст был включён как цитата в ваш комментарий?
#
# Нужно нажать на клавишу R, или вставить ">"
#
# 5.2) Как вставить картинку в ишьюс?
#
# Скопировать и вставить из буфера обмена
#
# 6) Как понять что ваш форк устарел?
#
# На странице форка появится "This branch is X commits behind main repositroy",
# может появиться кнопка "Sync fork"
#
# 6.1) Как обновить форк?
#
# В нашем форке будет кнопка "Sync fork" -> "Update branch"
#
# 7) Как добавить участников в ваш репозиторий, чтобы команда могла работать над одним репозиторием?
#
# В репозитории зайти в настройки и там будет "Access" -> "Collaborators & teams",
# далее жмем "Add people", вводим данные почту/гитхаб и т.п, выбираем роль и приглашаем
#
# 8) Какой символ нужен для упоминания кого-либо?
#
# @username
#
# 8.1) Где находится Центр уведомлений, напишите ссылку
#
# https://github.com/notifications
#
# 9) Что такое и зачем нужен файл README
#
# README - это файл, содержащий информацию о проекте, код, набор данных и т.д.
# Нужен для того, чтобы новые люди могли легко разобраться в проекте и
# сделать представление о нем.
#
# 9.1) Что такое и зачем нужен файл CONTRIBUTING
#
# CONTRIBUTING - это файл, содержащий ифнормацию о том, какие люди могут внести
# свой вклад в проект(код, докумантация и т.д), нужен чтобы новички
# понимали, что от них ожидается
#
# 10) Как измененить основную ветку?
#
# Открываем настройки репозитория, выбираем "Branches", там будет показана
# текущая ветка, нажимаем "Edit", выбираем новую -> "Update"
#
# 10.1) Как передать проект? какая кнопка?
#
# В репозитории, который мы хотим передать, открываем найстроки,
# листаем до поля "Danger Zone", находим кнопку "Transfer ownership",
# и там выполяем то что просят сделать
#
# 10.2) Что такое файл .gitignore?
#
# Файл, в котором лежат папки/файлы, которые Git должен игнорировать
#
#
#

#

#

#

#
