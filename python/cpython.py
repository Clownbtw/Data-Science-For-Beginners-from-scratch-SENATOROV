"""Cpython."""

#

# 1) Что такое CPython и чем он отличается от Python?
#
# Cpython - это стандартная и наиболее широко используемая реализация языка Python. Cpython это в определенной степени компилятор, так как перед интерпретацией он преобразует код Python в байт-код. Python - это спецификация и концепция языка программирования. В итоге их отличия в том, что - Cpython это интерпретатор, написанная на С, а Python концепция ЯП.
#
# 2) Сколько существует реализаций Python, и какая из них самая популярная?
#
# Всего реализаций 6. Самая популянрная реализация - Cpython
#
# 3) На каком языке написан CPython?
#
# Написан на C
#
# 4) Кто создал CPython?
#
# CPython создал Гвидо ван Россум
#
# 5) Почему Python считается быстрым, несмотря на то, что это интерпретируемый язык?
#
# Так как ядро написано на С, python считается быстрым.
#
# 6) Напишите путь к Интерпретатору CPython на вашем компьютере
#
# /Users/Shared/anaconda3/bin/python3(на маке почему то выводит без "C")
#
# 7) Что содержится в папке include в CPython?
#
# Содержится файл abstract.h
#
# 8) Где можно найти исходный код CPython дайте ссылку на репозиторий гитхаб
#
# https://github.com/python/cpython
#
# 9) Как работает интерпретатор CPython при выполнении кода?
#
#     1. Сначала происходит компиляция кода в байт-код
#     2. Потом просходит исполнение в виртуальной машине Python
#     3. После исполнения и проверки в ВМ, преобразовывается все в машинный код
#
# 10) Какая команда используется для запуска файла с помощью CPython?
#
# В cmd вставляем путь до интерпретатора, потом путь до файла
#
# 11)  Можно ли запускать текстовые файлы через интерпретатор Python? Почему?
#
# Можно, так как интерпретатор выполняет и запускает код из такого файла как скрипт
#
# 12) Как указать путь к интерпретатору и файлу для выполнения кода?
#
# В папке Python -> Python312 нужно найти python.exe(это и будет интерпретатор) и также путь до файла просто нужно его скопировать
#
# 13) Чем PyPy отличается от CPython?
#
# Cpython - это стандартная и наиболее широко используемая реализация языка Python. Cpython это в определенной степени компилятор, так как перед интерпретацией он преобразует код Python в байт-код. PyPy - это альтернативная реализация Python, написанная на самом Python
#
# 14) Почему PyPy не может использоваться для всех проектов на Python?
#
# Он не может использоваться на всех проектах, так как большая часть кода на Python написана на C/C++ (pandas,TensorFlow,NumPy и т.п.).
# PyPy более медленный на C-образных библиотеках, Cpython проще поддерживать, так как более популярен.
#
# 15) Где можно скачать PyPy?
#
# https://pypy.org/download.html?utm_source=chatgpt.com
#
# 16) Как установить PyPy после скачивания?
#
# Распаковываем архив, находим нужную папку, добавляем в PATH
#
# 17) Как запустить файл с помощью PyPy?
#
# Нужно указать путь, но в конце поставить .../pypy3 наш_файл.py
#
# 18) Почему PyPy выполняет код быстрее, чем CPython?
#
# Использует JIT((Just-In-Time) - компилирует код в машшиный код сразу), который превращает часто исполняемый код в машинный
#
# Практические задания:
#
# 1) Поиск и установка CPython
#
# python3 --version
# Python 3.11.4
#
# 2) Исследование структуры CPython
#
# Довльно много файлов на С
#
# 3) Создайте текстовый файл example.txt с содержимым: print("Hello from CPython!")
#
# C txt:
# python /Users/artem/Desktop/example.txt
# Hello from CPython
#
# C py:
# python /Users/Shared/anaconda3/pkgs/spyder-5.4.3-py311hecd8cb5_1/lib/python3.11/site-packages/spyder/widgets/github/Data-Science-For-Beginners-from-scratch-SENATOROV/exm.py
# Hello from Cpython
#
# 4) Задание 4: Установка и использование PyPy
#
# Вывод одинаковый, что с txt, что c py
#
# 5) Задание 5: Сравнение производительности CPython и PyPy
#
# У Cpython - 1.5 секунды, у pypy - 0.3 секунды (с окргулением все)


#

#
