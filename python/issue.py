"""Что такое issue и зачем это нужно."""

# 1) Что такое Issues на GitHub и для чего они используются?
#
# Ишьюсы используются для обучения программироованию или рассказывали как работает их код.
# Также если мы не понимаем какие-либо строки кода в файле,
# с помощью ишьюса мы можем попросить рассказать про них.
#
# 2) Чем Issues отличаются от других инструментов управления задачами?
#
# Issues более удобны, так как они сразу поступают к человеку и сразу можно задать вопрос
# по коду/ блоку кода/ целым файлам, и можно получить ответ в том же месте,
# где и просходит разработка проекта/учеба и т.п.
# Еще одно удобство, в одном месте мы можем сообщить о баге или ошибке в коде и не надо
# открывать множество программ.
#
# 3) Какие основные компоненты (поля) есть у каждого Issue?
#
#     1.Поле title - здесь мы вводим, кратко информацию о ситуации/проблеме
#     2.Поле description - здесь мы вводим информацию о нашей проблеме и
#     если нужно что-то по коду, то вставляем код.
#     3.Поле milestone - привязка к дедлайну
#     4.Поле labels - в этом поле указывается флаг(тема ишьюса, bug и т.п)
#
# 4) Как создать новое Issue в репозитории?
#
# Нужно выделить строки непонятного для нас кода,
# потом сверху возле кнопки '<Code>' будет кнопка Issues,
# нажимаем на нее и далее будет зеленая кнокпа New issues,
# потом находим ту тему которая больше подходит к нашей ситуации
# (Bug report, feature request, other) и выбираем ее.
#
# 5) Какие данные рекомендуется указывать в описании Issue для лучшего понимания задачи?
#
# Рекомендуется указывать файл с кодом, который мы не поняли или сообщили про ошибку
#
# 6) Какие теги (labels) можно добавить к Issue? Какие из них стандартные?
#
# Теги: bug, dependencies, documentation, duplicate, enhancement,
# good first issue, help wanted - как понял все они стандартные и в целом все теги,
# которые можно выбрать в этом поле они стандартные.
#
# 7) Как прикрепить Assignees (ответственных) к Issue?
#
# В поле Assignees нужно просто нажать и появится список тех кого можно сделать отвественными
#
# 8) Как использовать Labels для классификации задач?
#
# Исходя из проблемы(темы issues) мы должы подобрать тег для ее классификации
#
# 9) Для чего нужен Milestone, и как связать его с Issue?
#
# Нужем milestone для привязки issue к времени,
# когда мы хотим решить данную проблему,
# связать его с issue надо просто нажать на поле milestone и выбрать время
#
# 10) Как привязать Issue к пул-реквесту (Pull Request)?
#
# 1.Зайти в ишьюс и посмотреть, что за ошибка
# 2.Исправляем ошибку, сохраняем
# 3.Заходим в ишьюс, копируем тайтл и копируем его в тайт выпавшего окна
# 4.Обязательно нужно чтобы был milestone
# 5.В окне нажимаем на зеленую кнопку sign commit changes
#
# 11) Как добавить комментарий к существующему Issue?
#
# Нужно перейти сверху во вкладку Issues и выбрать нужный,
# после пролистаем ниже и будет поле add a comment
#
# 12) Как закрыть Issue вручную?
#
# Во вкладке issues сверху, переходим на нужный issue и закрываем вручную
#
# 13) Можно ли автоматически закрыть Issue с помощью сообщения в коммите или пул-реквесте? Как это сделать?
#
# Можно через коммит, нужно написать в title #(номер ошибки),
# в description closes #(номер ошибки)
#
# 14) Как повторно открыть закрытое Issue, если работа ещё не завершена?
#
# Также находим issue, только уже закрытый и открываем вручную - кнопка Reopen issue
#
# 15) Как найти все открытые или закрытые Issues в репозитории?
#
# Сверху во вкладке Issue,
# после нажатия будет поиск и там будет написано - 'Open', 'Closed' и находим нужный нам
#
# 16) Как использовать фильтры для поиска Issues по меткам, исполнителям или другим критериям?
#
# 1.Если ищем по лейблам,
# то нужно указать какие там была проблема(bag, duplicate и т.п.)
# 2.Если ищем по исполнителям,
# то нужно указать какие люди работали над issue(если их конечно указывали)
# 3.Если ищем по времени(milestones),
# то указываем дату либо месяц, когда работали над проблемой
#
# 17) Как сортировать Issues по приоритету, дате создания или другим параметрам?
#
# Во вкладке Issues, будут соответсвующие вклади(author, labels, project и т.п) ищем нужную нам
#
# 18) Как настроить автоматические уведомления о новых или изменённых Issues?
#
# Самый простой способ получать информацию - через мессенджеры
#
# 19) Что такое Projects в контексте GitHub, и как связать их с Issues?
#
# Projects в гитхабе - если кратко, то это таблица для планирования.
# Служит для организации работы, можно создавать и настраивать несколько представлений,
# отфильтровав, сортируя, срезы и группируя запросы на вытягивание,
# чтобы управлять невыполненной работой команды и планами.
#
# 20) Какие сторонние инструменты можно использовать для автоматизации работы с Issues (например, боты, Webhooks)?
#
# Можно использовать, как пример ТГ-ботов,
# чтобы автоматизровать работу с issues
# или веб-хуки нужные для создания уведомлений на работу с issue
#
# 21) Как упомянуть другого пользователя в комментарии к Issue?
#
# Нужно указать имя другого пользователя и он получит уведомление
#
# 22) Как запросить дополнительные данные или уточнения у автора Issue?
#
# Можно оставить комментарий для уточнения,
# либо же попросить, чтобы автор прислал сслыку(permalink) на код
#
# 23) Что делать, если Issue неактуально или его нужно объединить с другим?
#
# Либо закрыть issue с комменатрием,
# либо обьедитить его с другим с помощью duplicate
#
# 24) Как использовать шаблоны для создания Issues?
#
# Нужно добавить файл шаблоный для ишьюсов (ISSUE_TEMPELATE) в проект,
# и тогда новые разработчики будут придерживаться этого шаблона,
# что может сделать более читаемым issues
#
# 25) Что такое Linked Issues, и как создать связь между задачами?
#
# Что такое Linked Issues - это взаимосвязь между задачами.
# Создается связь через интерфейс - в разделе linked issue и там будут три типа связи
# ,is blocked by - данная задача ждет другую,
# blocks - данная задача блокирует другую,
# relates to - обычная связь без блокировки
#
# 26) Какие метрики (например, время выполнения) можно отслеживать с помощью Issues?
#
# Можно отслеживать:
#
# 1.Время открытия/закрытия
# 2.Вовремя ли закрыли(в milestone)
# 3.Количество открытых задач
# 4.Сколько людей трудятся над задачей
# 5.Какие теги были указаны
#
# 27) Какие best practices рекомендуются при работе с Issues в команде?
#
# 1.Писать issues по шаблону на работе
# 2.Подробно описывать ситуацию/проблему
# 3.Уведомлять об открытии/закрытии
# 4.Давать обратную связь по выполненной работе
#

#

#
